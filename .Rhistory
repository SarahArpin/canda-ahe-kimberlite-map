# packages
library(sf) # the base package manipulating shapes
library(rgdal) # geo data abstraction library
library(geojsonio) # geo json input and output
library(spdplyr) # the `dplyr` counterpart for shapes
library(rmapshaper) # the package that allows geo shape transformation
library(magrittr) # data wrangling
library(dplyr)
library(tidyr)
library(ggplot2) # general data wrangling and plotting
# scripts
source("scripts/functions.R")
# global knitting options for code rendering
knitr::opts_chunk$set(
collapse = TRUE, comment = "#>",
dev = c("png", "pdf"),
dev.args = list(pdf = list(encoding = "WinAnsi", useDingbats = FALSE)),
fig.keep = "all",
fig.path = file.path("plots", paste0(gsub("\\.[Rr]md", "", knitr::current_input()), "_"))
)
install.packages(c("sf", "rgdal", "geojsonio", "spdplyr", "rmapshaper"))
# packages
library(sf) # the base package manipulating shapes
library(rgdal) # geo data abstraction library
library(geojsonio) # geo json input and output
library(spdplyr) # the `dplyr` counterpart for shapes
library(rmapshaper) # the package that allows geo shape transformation
library(magrittr) # data wrangling
library(dplyr)
library(tidyr)
library(ggplot2) # general data wrangling and plotting
# scripts
source("scripts/functions.R")
# global knitting options for code rendering
knitr::opts_chunk$set(
collapse = TRUE, comment = "#>",
dev = c("png", "pdf"),
dev.args = list(pdf = list(encoding = "WinAnsi", useDingbats = FALSE)),
fig.keep = "all",
fig.path = file.path("plots", paste0(gsub("\\.[Rr]md", "", knitr::current_input()), "_"))
)
canada_raw = readOGR(dsn = "data", layer = "canada_basemap", encoding = 'latin1') # 1
canada_raw_json <- geojson_json(canada_raw) # 2
canada_raw_sim <- ms_simplify(canada_raw_json) # 3
geojson_write(canada_raw_sim, file = "data/canada_cd_sim.geojson") # 4
canada_raw_json <- geojson_json(canada_raw) # 2
# packages
library(sf) # the base package manipulating shapes
library(rgdal) # geo data abstraction library
library(geojsonio) # geo json input and output
library(spdplyr) # the `dplyr` counterpart for shapes
library(rmapshaper) # the package that allows geo shape transformation
library(magrittr) # data wrangling
library(dplyr)
library(tidyr)
library(ggplot2) # general data wrangling and plotting
# scripts
#source("scripts/functions.R")
# global knitting options for code rendering
knitr::opts_chunk$set(
collapse = TRUE, comment = "#>",
dev = c("png", "pdf"),
dev.args = list(pdf = list(encoding = "WinAnsi", useDingbats = FALSE)),
fig.keep = "all",
fig.path = file.path("plots", paste0(gsub("\\.[Rr]md", "", knitr::current_input()), "_"))
)
crop_raw = readOGR(dsn = "data", layer = "CanadaCrop", encoding = 'latin1') # 1
crop_raw_json <- geojson_json(crop_raw) # 2
crop_raw_sim <- ms_simplify(crop_raw_json) # 3
geojson_write(crop_raw_json, file = "data/crop_cd_sim.geojson") # 4
# Define the maps' theme -- remove axes, ticks, borders, legends, etc.
theme_map <- function(base_size=9, base_family="") { # 3
require(grid)
theme_bw(base_size=base_size, base_family=base_family) %+replace%
theme(axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank(),
panel.spacing=unit(0, "lines"),
plot.background=element_blank(),
legend.justification = c(0,0),
legend.position = c(0,0)
)
}
# Define the filling colors for each province; max allowed is 9 but good enough for the 13 provinces + territories
map_colors <- RColorBrewer::brewer.pal(9, "Pastel1") %>% rep(37) # 4
#add to plot
# theme_map() +
#   	theme(panel.grid.major = element_line(color = "white"),
# 		  legend.key = element_rect(color = "gray40", size = 0.1))
canada_cd <- st_read("data/canada_cd_sim.geojson", quiet = TRUE) # 1
crs_string <- "+proj=lcc +lat_1=49 +lat_2=77 +lon_0=-91.52 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs" # 2
# Plot the maps
ggplot() +
geom_sf(data = canada_cd, aes(fill = PRUID), color = "gray60", size = 0.1) + # 5
coord_sf(crs = crs_string) + # 6
scale_fill_manual(values = map_colors) +
guides(fill = "none")
crop_cd <- st_read("data/crop_cd_sim.geojson", quiet = TRUE) # 1
canada_cd_t <- st_transform(canada_cd, crs_string)
ggplot() +
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
theme_map() +
theme(panel.grid.major = element_line(color = "white"),
legend.key = element_rect(color = "gray40", size = 0.1))
ggplot() +
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
View(canada_cd)
ggplot() +
geom_sf(data = crop_cd, color = "gray60", size = 0.1, alpha = 0.3) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
geom_sf(data = crop_cd, color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
geom_sf(data = crop_cd, color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string, lims_method = "geometry_bbox") +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
bbox <-  st_polygon(crop_cd[[2]][[1]])
View(bbox)
?st_bboox
?st_bbox
bbox <-  st_bbox(crop_cd[[2]][[1]], crs = crs_string)
transect1_cd <- st_crop(canada_cd_t, bbox)
transect1_cd <- st_crop(canada_cd_t, bbox)
bbox <-  st_polygon(crop_cd[[2]][[1]], crs = crs_string)
bbox <-  st_bbox(crop_cd[[2]][[1]], crs = crs_string)
bbox
transect1_cd <- st_crop(canada_cd_t, xmin=-1585578.9, ymin=4009743.7, xmax =724394.2, ymax =5221468.4)
View(canada_cd_t)
ggplot() +
geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
View(crop_cd)
View(canada_cd_t)
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geoomo_sf(data = crop_sd) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geom_sf(data = crop_sd) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geom_sf(data = crop_cd) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
#geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geom_sf(data = crop_cd) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
#geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geom_sf(data = crop_cd) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
#geom_sf(data = canada_cd_t, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
geom_sf(data = crop_cd) +
coord_sf(default_crs = NULL) +
#coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
dbeta(0.5, 1, 2)
dbeta(seq(0, 10, 0.5), 1, 2)
dnorm(0.5)
dbinom(0.5, 10, 1/2)
dbinom(2, 10, 1/2)
3.3-15
3.3-1.5
3.3-1.8
2.8-1.9
2.8-0.9
1.9+0.9
3.3-1.5
1.8/2
1.5+0.9
3.3-2.4
3.3-1.5
1.5+.9
3.3-2.4
2.4+.9
2.4-.9
2.8-1.9
0.9/2
1.9+.45
2.8-2.35
pnorm(2.17)
2*(pnorm(2.17)- 1)
1-pnorm(2.17)
.015*100
1+2*(1-pnorm(2.17))
2*(1-pnorm(2.17))
0.0300
0.0300*100
98/100
1-.98
qnorm(1-(0.02/2))
qnorm((0.02/2))
3/100
1-.03
qnorm((0.97/2))
qnorm(1-(0.97/2))
qnorm(0.98)
pnorm(0.98)
pnorm(2.17)
qnorm(1-(0.02/2))
pnorm(2.17)
1-0.9849966
qnorm(1-(0.0150034/2))
pnorm(2.17)*100
qnorm(1-(0.015/2))
qnorm(1-(0.015/2)) * (16.95/sqrt(20))
101.988+9.219046
101.988-9.219046
2.17 * (16.95/sqrt(20))
101.988+8.2245
101.988-8.2245
2.17 * (16.95/sqrt(235))
2.17 * (16.95/sqrt(35))
101.988+6.2172
qnorm(1-.005)
pnorm(2.17)*100
bbox <-  st_bbox(crop_cd[[2]][[1]], crs = crs_string)
st_crs(bbox)
bbox <-  st_polygon(crop_cd[[2]][[1]])
st_crs(bbox)
bbox <-  st_bbox(crop_cd[[2]][[1]], crs = crs_string)
st_set_crs(bbox, crs_string)
bbox <- st_set_crs(bbox, crs_string)
st_crs(bbox)
st_crs(canada_cd_t)
transect1_cd <- st_crop(canada_cd_t, bbox)
transect1_cd <- st_crop(canada_cd_t, bbox)
bbox <-  st_polygon(crop_cd[[2]][[1]])
bbox <- st_set_crs(bbox, crs_string)
bbox <-  st_bbox(crop_cd[[2]][[1]])
bbox <- st_set_crs(bbox, crs_string)
bbox <-  st_bbox(crop_cd[[2]][[1]])
bbox <- st_set_crs(bbox, crs_string)
st_crs(bbox)
st_crs(canada_cd)
st_crs(canada_cd_t)
st_crop(canada_cd_t, bbox)
st_crop(bbox, canada_cd_t)
bbox
class(canada_cd_t)
bbox_crop <- st_bbox(crop_cd[[2]][[1]]) # turn xmin,xmax,ymin,ymax from crop into bbox
bbox_crop <- st_set_crs(bbox, crs_string) # set crs of bbox
st_crs(bbox_crop) # check that the crs set, it did, good job.
st_crop(canada_cd_t, bbox_crop)
bbox_crop
bbox_vector <- c(xmin=-1585578.9, ymin=4009743.7, xmax=724394.2,ymax=5221468.4)
class(bbox_vector)
str(bbox_vector)
as.vector(bbox_vector)
bbox_vector <- as.vector(bbox_vector)
str(bbox_vector)
st_crop(canada_cd_t, bbox_vector)
bbox_vector <- c(-1585578.9, 4009743.7, 724394.2, 5221468.4)
View(canada_cd_t)
sf::st_filter(canada_cd_t, PRNAME =="Northwest Territories / Territoires du Nord-Ouest")
canada_cd_t, %>%
sf::st_filter(PRNAME =="Northwest Territories / Territoires du Nord-Ouest")
canada_cd_t %>%
filter(PRNAME =="Northwest Territories / Territoires du Nord-Ouest")
nw_cd <- canada_cd_t %>%
filter(PRNAME =="Northwest Territories / Territoires du Nord-Ouest")
View(nw_cd)
ggplot() +
geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = nw_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = nw_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
nw_cd <- canada_cd_t %>%
filter(PRNAME == "Northwest Territories / Territoires du Nord-Ouest" | PRNAME == "Nunavut")
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = nw_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
View(nw_cd)
View(nw_cd[[7]][[1]])
nw_cd[[7]][[1]][[1]]
min(nw_cd[[7]][[1]][[1]])
nw_cd[[7]][[1]][[1]][[1]]
bbox_vector
View(nw_cd[[7]][[5]])
crop_raw = readOGR(dsn = "data", layer = "canada_crop", encoding = 'latin1') # 1
crop_raw = readOGR(dsn = "data", layer = "canada_crop", encoding = 'latin1') # 1
crop_raw_json <- geojson_json(crop_raw) # 2
crop_raw_sim <- ms_simplify(crop_raw_json) # 3
geojson_write(crop_raw_json, file = "data/crop_cd_sim.geojson") # 4
# Plot the maps
ggplot() +
geom_sf(data = canada_cd, aes(fill = PRUID), color = "gray60", size = 0.1) + # 5
coord_sf(crs = crs_string) + # 6
scale_fill_manual(values = map_colors) +
guides(fill = "none")
crop_cd <- st_read("data/crop_cd_sim.geojson", quiet = TRUE) # read in crop rectangle
bbox <- st_bbox(crop_cd[[2]][[1]]) # turn xmin,xmax,ymin,ymax from crop into bbox
bbox <- st_set_crs(bbox, crs_string) # set crs of bbox
st_crs(bbox) # check that the crs set, it did, good job.
canada_cd_t <- st_transform(canada_cd, crs_string) #create map of canada that has correct crs
st_crs(canada_cd_t) # check that is has the right crs, it does, good job v2.
bbox
st_crop(canada_cd_t, bbox)
bbox
st_crop(canada_cd_t, xmin = 5047422, ymin=  3230851, xmax= 6283248, ymax= 4324082 )
st_crop(nw_cd, xmin = 5047422, ymin=  3230851, xmax= 6283248, ymax= 4324082 )
st_crop(canada_cd_t, c(xmin = 5047422, ymin=  3230851, xmax= 6283248, ymax= 4324082 ))
View(canada_cd)
View(canada_cd[[7]][[1]])
canada_cd[[7]][[1]][[1]]
st_crop(canada_cd, c(xmin = -97, ymin=  50, xmax= -100, ymax= 60 ))
st_crop(canada_cd, c(xmin = -100, ymin=  50, xmax= -97, ymax= 60))
st_crop(canada_cd, c(xmin = 100, ymin=  50, xmax= 97, ymax= 60))
crop_raw = readOGR(dsn = "data", layer = "transect1_crop", encoding = 'latin1') # 1
crop_raw_json <- geojson_json(crop_raw) # 2
crop_raw_sim <- ms_simplify(crop_raw_json) # 3
geojson_write(crop_raw_json, file = "data/crop_cd_sim.geojson") # 4
crop_cd <- st_read("data/crop_cd_sim.geojson", quiet = TRUE) # read in crop rectangle
bbox <- st_bbox(crop_cd[[2]][[1]]) # turn xmin,xmax,ymin,ymax from crop into bbox
bbox <- st_set_crs(bbox, crs_string) # set crs of bbox
st_crs(bbox) # check that the crs set, it did, good job.
qnorm(1-0.025)
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = bbox, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
transect1_cd <- st_transform(crop_cd, crs_string)
View(transect1_cd)
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = transect1_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(crs = crs_string) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = transect1_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(default_crs = NULL) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
str_crs(transect1_cd)
st_crs(transect1_cd)
View(transect1_cd)
View(transect1_cd[[8]][[1]])
transect1_cd <- st_set_crs(crop_cd, crs_string)
View(crop_cd)
View(crop_cd)
View(crop_cd)
crop_cd <- st_read("data/crop_cd_sim.geojson", quiet = TRUE) # read in crop rectangle
View(crop_cd)
View(crop_cd[[8]][[1]])
st_crs(crop_cd)
transect1_cd <- st_transform(crop_cd, crs_string)
View(transect1_cd)
View(transect1_cd[[8]][[1]])
st_crs(crop_cd)
transect1_cd <- st_transform(crop_cd, crs_string)
View(transect1_cd)
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = crop_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(default_crs = NULL) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
View(crop_cd)
st_crs(crop_cd)
transect1_cd <- st_transform(crop_cd, crs_string)
str(transect1_cd)
st_crs(crop_cd) <- crs_string
transect1_cd <- st_transform(crop_cd, crs_string)
str(transect1_cd)
ggplot() +
#geom_sf(data = sf_pipes, color = "black", alpha = 1, size = 3) + # 17
geom_sf(data = transect1_cd, aes(fill = PRUID), color = "gray60", size = 0.1, alpha = 0.3) +
coord_sf(default_crs = NULL) +
scale_fill_manual(values = map_colors) +
guides(fill = "none") +
theme_classic()
st_set_crs(canada_cd, 3347)
crs_string_qgis <- "+proj=lcc +lat_1=49 +lat_2=77 +lat_0=63.390675 +lon_0=-91.86666666666666 +x_0=6200000 +y_0=3000000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_def" #could try using this and seeing what it does
